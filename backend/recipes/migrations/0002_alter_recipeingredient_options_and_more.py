# Generated by Django 4.2.20 on 2025-05-04 07:57

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("recipes", "0001_initial"),
    ]

    operations = [
        migrations.AlterModelOptions(
            name="recipeingredient",
            options={
                "default_related_name": "recipe_ingredients",
                "ordering": ("recipe", "ingredient"),
                "verbose_name": "Ингредиент в рецепте",
                "verbose_name_plural": "Ингредиенты в рецепте",
            },
        ),
        migrations.RemoveConstraint(
            model_name="recipeingredient",
            name="unique_recipe_ingredient",
        ),
        migrations.AlterField(
            model_name="ingredient",
            name="created_at",
            field=models.DateTimeField(auto_now_add=True, verbose_name="Добавлено"),
        ),
        migrations.AlterField(
            model_name="recipe",
            name="cooking_time",
            field=models.PositiveSmallIntegerField(
                validators=[
                    django.core.validators.MinValueValidator(
                        1, message="Время приготовления должно быть больше 1."
                    ),
                    django.core.validators.MaxValueValidator(
                        1440, message="Время приготовления должно быть меньше 1440."
                    ),
                ],
                verbose_name="Время приготовления",
            ),
        ),
        migrations.AlterField(
            model_name="recipeingredient",
            name="amount",
            field=models.PositiveSmallIntegerField(
                validators=[
                    django.core.validators.MinValueValidator(
                        1, message="Значение должно быть больше 1)."
                    ),
                    django.core.validators.MaxValueValidator(
                        10000, message="Значение должно быть меньше 10000)."
                    ),
                ],
                verbose_name="Количество ингредиента",
            ),
        ),
        migrations.AddConstraint(
            model_name="ingredient",
            constraint=models.UniqueConstraint(
                fields=("name", "measurement_unit"),
                name="unique_ingredient_name_measurement_unit",
                violation_error_message="Такой ингредиент уже существует в базе данных.",
            ),
        ),
        migrations.AddConstraint(
            model_name="recipeingredient",
            constraint=models.UniqueConstraint(
                fields=("recipe", "ingredient"),
                name="unique_recipe_ingredient",
                violation_error_message="Уже есть такой рецепт с  такими ингредиентами.",
            ),
        ),
    ]
